name: Release Docker Image

on:
  push:
    tags: v**

jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: set Environment Variables
        id: env
        run: |
          echo "NOW=$(date +'%F %Z %T')" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            offen/docker-volume-backup
            ghcr.io/offen/docker-volume-backup
          # define global behaviour for tags
          flavor: |
            latest=false
          # specify one tag which never gets set, to prevent the tag-attribute being empty, as it will fallback to a default
          tags: |
            # output v2.42.1-alpha.1 (incl. pre-releases)
            type=semver,pattern=v{{version}},enable=false
          labels: |
            org.opencontainers.image.title=${{github.event.repository.name}}
            org.opencontainers.image.description=Backup Docker volumes locally or to any S3, WebDAV, Azure Blob Storage, Dropbox or SSH compatible storage
            org.opencontainers.image.vendor=${{github.repository_owner}}
            org.opencontainers.image.licenses=MPL-2.0
            org.opencontainers.image.version=${{github.ref_name}}
            org.opencontainers.image.created=${{ env.NOW }}
            org.opencontainers.image.source=${{github.server_url}}/${{github.repository}}
            org.opencontainers.image.revision=${{github.sha}}
            org.opencontainers.image.url=https://offen.github.io/docker-volume-backup/
            org.opencontainers.image.documentation=https://offen.github.io/docker-volume-backup/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker tags
        id: tags
        run: |
          version_tag="${{github.ref_name}}"
          tags=($version_tag)
          if [[ "$version_tag" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # prerelease tags like `v2.0.0-alpha.1` should not be released as `latest` nor `v2`
            tags+=("latest")
            tags+=($(echo "$version_tag" | cut -d. -f1))
          fi
          releases=""
          for tag in "${tags[@]}"; do
            releases="${releases:+$releases,}offen/docker-volume-backup:$tag,ghcr.io/offen/docker-volume-backup:$tag"
          done
          echo "releases=$releases" >> "$GITHUB_OUTPUT"

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ steps.tags.outputs.releases }}
          labels: ${{ steps.meta.outputs.labels }}
